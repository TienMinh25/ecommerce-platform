// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: order_supplier.proto

package order_proto_gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSupplierOrdersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int64                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        *string                `protobuf:"bytes,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupplierOrdersRequest) Reset() {
	*x = GetSupplierOrdersRequest{}
	mi := &file_order_supplier_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupplierOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupplierOrdersRequest) ProtoMessage() {}

func (x *GetSupplierOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_supplier_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupplierOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetSupplierOrdersRequest) Descriptor() ([]byte, []int) {
	return file_order_supplier_proto_rawDescGZIP(), []int{0}
}

func (x *GetSupplierOrdersRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSupplierOrdersRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSupplierOrdersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSupplierOrdersRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type GetSupplierOrdersResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Data          []*SupplierOrdersResponse `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Metadata      *OrderMetadata            `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSupplierOrdersResponse) Reset() {
	*x = GetSupplierOrdersResponse{}
	mi := &file_order_supplier_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSupplierOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupplierOrdersResponse) ProtoMessage() {}

func (x *GetSupplierOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_supplier_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupplierOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetSupplierOrdersResponse) Descriptor() ([]byte, []int) {
	return file_order_supplier_proto_rawDescGZIP(), []int{1}
}

func (x *GetSupplierOrdersResponse) GetData() []*SupplierOrdersResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSupplierOrdersResponse) GetMetadata() *OrderMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SupplierOrdersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// info products
	ProductId           string  `protobuf:"bytes,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductVariantId    string  `protobuf:"bytes,5,opt,name=product_variant_id,json=productVariantId,proto3" json:"product_variant_id,omitempty"`
	ProductName         string  `protobuf:"bytes,6,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductVariantName  string  `protobuf:"bytes,7,opt,name=product_variant_name,json=productVariantName,proto3" json:"product_variant_name,omitempty"`
	ProductThumbnailUrl string  `protobuf:"bytes,8,opt,name=product_thumbnail_url,json=productThumbnailUrl,proto3" json:"product_thumbnail_url,omitempty"`
	Quantity            int64   `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice           float64 `protobuf:"fixed64,10,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	TotalPrice          float64 `protobuf:"fixed64,11,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DiscountAmount      float64 `protobuf:"fixed64,12,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	TaxAmount           float64 `protobuf:"fixed64,13,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
	ShippingFee         float64 `protobuf:"fixed64,14,opt,name=shipping_fee,json=shippingFee,proto3" json:"shipping_fee,omitempty"`
	Status              string  `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	// Used for detail when click into one order item
	TrackingNumber        string                 `protobuf:"bytes,16,opt,name=tracking_number,json=trackingNumber,proto3" json:"tracking_number,omitempty"`
	ShippingAddress       string                 `protobuf:"bytes,17,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	ShippingMethod        string                 `protobuf:"bytes,18,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method,omitempty"`
	RecipientName         string                 `protobuf:"bytes,19,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"`
	RecipientPhone        string                 `protobuf:"bytes,20,opt,name=recipient_phone,json=recipientPhone,proto3" json:"recipient_phone,omitempty"`
	EstimatedDeliveryDate *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=estimated_delivery_date,json=estimatedDeliveryDate,proto3" json:"estimated_delivery_date,omitempty"`
	ActualDeliveryDate    *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=actual_delivery_date,json=actualDeliveryDate,proto3,oneof" json:"actual_delivery_date,omitempty"`
	Notes                 *string                `protobuf:"bytes,23,opt,name=notes,proto3,oneof" json:"notes,omitempty"`
	CancelledReason       *string                `protobuf:"bytes,24,opt,name=cancelled_reason,json=cancelledReason,proto3,oneof" json:"cancelled_reason,omitempty"`
	// additional
	OrderItemId   string `protobuf:"bytes,25,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SupplierOrdersResponse) Reset() {
	*x = SupplierOrdersResponse{}
	mi := &file_order_supplier_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplierOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplierOrdersResponse) ProtoMessage() {}

func (x *SupplierOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_supplier_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplierOrdersResponse.ProtoReflect.Descriptor instead.
func (*SupplierOrdersResponse) Descriptor() ([]byte, []int) {
	return file_order_supplier_proto_rawDescGZIP(), []int{2}
}

func (x *SupplierOrdersResponse) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SupplierOrdersResponse) GetProductVariantId() string {
	if x != nil {
		return x.ProductVariantId
	}
	return ""
}

func (x *SupplierOrdersResponse) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *SupplierOrdersResponse) GetProductVariantName() string {
	if x != nil {
		return x.ProductVariantName
	}
	return ""
}

func (x *SupplierOrdersResponse) GetProductThumbnailUrl() string {
	if x != nil {
		return x.ProductThumbnailUrl
	}
	return ""
}

func (x *SupplierOrdersResponse) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SupplierOrdersResponse) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *SupplierOrdersResponse) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *SupplierOrdersResponse) GetDiscountAmount() float64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *SupplierOrdersResponse) GetTaxAmount() float64 {
	if x != nil {
		return x.TaxAmount
	}
	return 0
}

func (x *SupplierOrdersResponse) GetShippingFee() float64 {
	if x != nil {
		return x.ShippingFee
	}
	return 0
}

func (x *SupplierOrdersResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SupplierOrdersResponse) GetTrackingNumber() string {
	if x != nil {
		return x.TrackingNumber
	}
	return ""
}

func (x *SupplierOrdersResponse) GetShippingAddress() string {
	if x != nil {
		return x.ShippingAddress
	}
	return ""
}

func (x *SupplierOrdersResponse) GetShippingMethod() string {
	if x != nil {
		return x.ShippingMethod
	}
	return ""
}

func (x *SupplierOrdersResponse) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *SupplierOrdersResponse) GetRecipientPhone() string {
	if x != nil {
		return x.RecipientPhone
	}
	return ""
}

func (x *SupplierOrdersResponse) GetEstimatedDeliveryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedDeliveryDate
	}
	return nil
}

func (x *SupplierOrdersResponse) GetActualDeliveryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ActualDeliveryDate
	}
	return nil
}

func (x *SupplierOrdersResponse) GetNotes() string {
	if x != nil && x.Notes != nil {
		return *x.Notes
	}
	return ""
}

func (x *SupplierOrdersResponse) GetCancelledReason() string {
	if x != nil && x.CancelledReason != nil {
		return *x.CancelledReason
	}
	return ""
}

func (x *SupplierOrdersResponse) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

type UpdateOrderItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrderItemId   string                 `protobuf:"bytes,3,opt,name=order_item_id,json=orderItemId,proto3" json:"order_item_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrderItemRequest) Reset() {
	*x = UpdateOrderItemRequest{}
	mi := &file_order_supplier_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrderItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderItemRequest) ProtoMessage() {}

func (x *UpdateOrderItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_order_supplier_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderItemRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderItemRequest) Descriptor() ([]byte, []int) {
	return file_order_supplier_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateOrderItemRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateOrderItemRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateOrderItemRequest) GetOrderItemId() string {
	if x != nil {
		return x.OrderItemId
	}
	return ""
}

type UpdateOrderItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrderItemResponse) Reset() {
	*x = UpdateOrderItemResponse{}
	mi := &file_order_supplier_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrderItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderItemResponse) ProtoMessage() {}

func (x *UpdateOrderItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_order_supplier_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderItemResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderItemResponse) Descriptor() ([]byte, []int) {
	return file_order_supplier_proto_rawDescGZIP(), []int{4}
}

var File_order_supplier_proto protoreflect.FileDescriptor

var file_order_supplier_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe8, 0x07, 0x0a, 0x16,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x52, 0x0a, 0x17, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x14,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_order_supplier_proto_rawDescOnce sync.Once
	file_order_supplier_proto_rawDescData []byte
)

func file_order_supplier_proto_rawDescGZIP() []byte {
	file_order_supplier_proto_rawDescOnce.Do(func() {
		file_order_supplier_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_order_supplier_proto_rawDesc), len(file_order_supplier_proto_rawDesc)))
	})
	return file_order_supplier_proto_rawDescData
}

var file_order_supplier_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_order_supplier_proto_goTypes = []any{
	(*GetSupplierOrdersRequest)(nil),  // 0: GetSupplierOrdersRequest
	(*GetSupplierOrdersResponse)(nil), // 1: GetSupplierOrdersResponse
	(*SupplierOrdersResponse)(nil),    // 2: SupplierOrdersResponse
	(*UpdateOrderItemRequest)(nil),    // 3: UpdateOrderItemRequest
	(*UpdateOrderItemResponse)(nil),   // 4: UpdateOrderItemResponse
	(*OrderMetadata)(nil),             // 5: OrderMetadata
	(*timestamppb.Timestamp)(nil),     // 6: google.protobuf.Timestamp
}
var file_order_supplier_proto_depIdxs = []int32{
	2, // 0: GetSupplierOrdersResponse.data:type_name -> SupplierOrdersResponse
	5, // 1: GetSupplierOrdersResponse.metadata:type_name -> OrderMetadata
	6, // 2: SupplierOrdersResponse.estimated_delivery_date:type_name -> google.protobuf.Timestamp
	6, // 3: SupplierOrdersResponse.actual_delivery_date:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_order_supplier_proto_init() }
func file_order_supplier_proto_init() {
	if File_order_supplier_proto != nil {
		return
	}
	file_order_metadata_proto_init()
	file_order_supplier_proto_msgTypes[0].OneofWrappers = []any{}
	file_order_supplier_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_order_supplier_proto_rawDesc), len(file_order_supplier_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_order_supplier_proto_goTypes,
		DependencyIndexes: file_order_supplier_proto_depIdxs,
		MessageInfos:      file_order_supplier_proto_msgTypes,
	}.Build()
	File_order_supplier_proto = out.File
	file_order_supplier_proto_goTypes = nil
	file_order_supplier_proto_depIdxs = nil
}
