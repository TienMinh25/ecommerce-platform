{
    "swagger": "2.0",
    "info": {
        "description": "API for ecommerce",
        "title": "Ecommerce API",
        "contact": {},
        "version": "1.0"
    },
    "host": "server.local:3000",
    "basePath": "/api/v1",
    "paths": {
        "/address-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list address types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address-types"
                ],
                "summary": "Get list address types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of records returned",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ListAddressTypesResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create new address type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address-types"
                ],
                "summary": "Create new address type",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateAddressTypeByAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateAddressTypeResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/address-types/{addressTypeID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get address type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address-types"
                ],
                "summary": "Get address type by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "address type id",
                        "name": "addressTypeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetAddressTypeByIdResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete address type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address-types"
                ],
                "summary": "Delete address type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "address type id",
                        "name": "addressTypeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.DeleteAddressTypeResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update address type by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address-types"
                ],
                "summary": "Update address type by address id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "address type id",
                        "name": "addressTypeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateAddressTypeBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateAddressTypeResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "change password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ChangePasswordResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/check-token": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "check token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "check token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CheckTokenResponseDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "call to send OTP through mail or mobile phone (if verify)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "forgot password",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ForgotPasswordResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login the system",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.LoginResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "logout account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "logout",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.LogoutResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/oauth/url": {
            "get": {
                "description": "get authorization url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "get authorization url",
                "parameters": [
                    {
                        "enum": [
                            "google",
                            "facebook"
                        ],
                        "type": "string",
                        "description": "type of oauth provider",
                        "name": "oauth_provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetAuthorizationURLResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "description": "refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "refresh token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "{refresh_token}",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.RefreshTokenResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new account customer",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.RegisterResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/resend-verify-email": {
            "post": {
                "description": "resend otp to verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "resend otp to verify email",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResendVerifyEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResendVerifyEmailResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "reset password (used for forgot password)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "reset password (used for forgot password)",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResetPasswordResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/auth/verify-email": {
            "post": {
                "description": "verify email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "verify email register",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.VerifyEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.VerifyEmailResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/modules": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of modules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get module list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (required if getAll is false)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (required if getAll is false)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Get all modules without pagination",
                        "name": "getAll",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetListModuleResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new module with a given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Create a new module",
                "parameters": [
                    {
                        "description": "Module Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateModuleResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/modules/{moduleID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get module details by module ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get module by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Module ID",
                        "name": "moduleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetModuleResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a module using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Delete module by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Module ID",
                        "name": "moduleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.DeletePermissionByPermissionIDURIResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the module name using module ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Update module by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Module ID",
                        "name": "moduleID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Module Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateModuleByModuleIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateModuleByModuleIDResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of permissions or all permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get a list of permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (required if getAll is false)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (required if getAll is false)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Get all permissions without pagination",
                        "name": "getAll",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetPermissionResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new permission with a given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Create a new permission",
                "parameters": [
                    {
                        "description": "Permission Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreatePermissionResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/permissions/{permissionID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific permission by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Get a permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permissionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetPermissionResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a specific permission from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Delete a permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permissionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.DeletePermissionByPermissionIDURIResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Modify an existing permission's action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permissions"
                ],
                "summary": "Update a permission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Permission ID",
                        "name": "permissionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdatePermissionByPermissionIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdatePermissionByIDResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list roles pagination with some filter and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get list roles pagination with some filter and sorting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of records returned",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "name"
                        ],
                        "type": "string",
                        "description": "Provide for search by name",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value for search",
                        "name": "searchValue",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "name"
                        ],
                        "type": "string",
                        "description": "Sort by some attributes",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order asc or desc",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetRoleResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create new role based on modules and permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create new role based on modules and permissions",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateRoleResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/roles/{roleID}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete role by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Delete role by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role id for delete",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.DeleteRolesResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update permissions on modules for role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update permissions on modules for role",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateRoleRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Role id to update",
                        "name": "roleID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateRolesResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get list users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of records returned",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "email",
                            "phone",
                            "fullname"
                        ],
                        "type": "string",
                        "description": "Provide for search by email, phone or fullname",
                        "name": "searchBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value for search",
                        "name": "searchValue",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "fullname",
                            "email",
                            "birthdate",
                            "updated_at",
                            "phone"
                        ],
                        "type": "string",
                        "description": "Sort by some attributes",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order asc or desc",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "Filter by email verify",
                        "name": "emailVerify",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "Filter by phone verify",
                        "name": "phoneVerify",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "type": "string",
                        "description": "Filter by status of user",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time for last update",
                        "name": "updatedAtStartFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time for last update",
                        "name": "updatedAtEndFrom",
                        "in": "query"
                    },
                    {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "integer",
                        "description": "Filter by role id",
                        "name": "roleID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetUserByAdminResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create new user by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "create new user by admin",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateUserByAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.CreateUserByAdminResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lấy thông tin người dùng hiện tại dựa vào access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "me"
                ],
                "summary": "Lấy thông tin người dùng hiện tại",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetCurrentUserResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cập nhật thông tin cá nhân của người dùng hiện tại",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "me"
                ],
                "summary": "Cập nhật thông tin cá nhân",
                "parameters": [
                    {
                        "description": "Thông tin cần cập nhật",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateCurrentUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateCurrentUserResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/users/me/avatars/get-presigned-url": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "lấy presigned url để upload ảnh",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "me"
                ],
                "summary": "lấy presigned url để upload ảnh",
                "parameters": [
                    {
                        "description": "Thông tin file",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetAvatarPresignedURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetAvatarPresignedURLResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/users/me/notification-settings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Lấy cài đặt thông báo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "me"
                ],
                "summary": "Lấy cài đặt thông báo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.GetNotificationSettingsResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cập nhật cài đặt thông báo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "me"
                ],
                "summary": "Cập nhật cài đặt thông báo",
                "parameters": [
                    {
                        "description": "Dữ liệu cập nhật",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateNotificationSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateNotificationSettingsResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        },
        "/users/{userID}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "delete user by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "delete user by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id on path",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.DeleteUserByAdminResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update user by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update user by admin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id on path",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateUserByAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.UpdateUserByAdminResponseDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api_gateway_dto.ResponseErrorDocs"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_gateway_dto.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "old_password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                }
            }
        },
        "api_gateway_dto.ChangePasswordResponse": {
            "type": "object"
        },
        "api_gateway_dto.ChangePasswordResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.ChangePasswordResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.CheckTokenResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.RoleLoginResponse"
                    }
                }
            }
        },
        "api_gateway_dto.CheckTokenResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.CheckTokenResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.CreateAddressTypeByAdminRequest": {
            "type": "object",
            "required": [
                "address_type"
            ],
            "properties": {
                "address_type": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.CreateAddressTypeByAdminResponse": {
            "type": "object"
        },
        "api_gateway_dto.CreateAddressTypeResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.CreateAddressTypeByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.CreateModuleRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "api_gateway_dto.CreateModuleResponse": {
            "type": "object"
        },
        "api_gateway_dto.CreateModuleResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.CreateModuleResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.CreatePermissionResponse": {
            "type": "object"
        },
        "api_gateway_dto.CreatePermissionResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.CreatePermissionResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.CreateRoleRequest": {
            "type": "object",
            "required": [
                "modules_permissions",
                "role_name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "modules_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.ModulesPermissionsRequest"
                    }
                },
                "role_name": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "api_gateway_dto.CreateRoleResponse": {
            "type": "object"
        },
        "api_gateway_dto.CreateRoleResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.CreateRoleResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.CreateUserByAdminRequest": {
            "type": "object",
            "required": [
                "avatar_url",
                "email",
                "fullname",
                "password",
                "roles"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "enum": [
                        "active",
                        "inactive"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_gateway_models.UserStatus"
                        }
                    ],
                    "example": "active"
                }
            }
        },
        "api_gateway_dto.CreateUserByAdminResponse": {
            "type": "object"
        },
        "api_gateway_dto.CreateUserByAdminResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.CreateUserByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.DeleteAddressTypeByAdminResponse": {
            "type": "object"
        },
        "api_gateway_dto.DeleteAddressTypeResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.DeleteAddressTypeByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.DeletePermissionByPermissionIDURIResponse": {
            "type": "object"
        },
        "api_gateway_dto.DeletePermissionByPermissionIDURIResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.DeletePermissionByPermissionIDURIResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.DeleteRoleResponse": {
            "type": "object"
        },
        "api_gateway_dto.DeleteRolesResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.DeleteRoleResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.DeleteUserByAdminResponse": {
            "type": "object"
        },
        "api_gateway_dto.DeleteUserByAdminResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.DeleteUserByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.ForgotPasswordResponse": {
            "type": "object"
        },
        "api_gateway_dto.ForgotPasswordResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.ForgotPasswordResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetAddressTypeByIdResponse": {
            "type": "object",
            "properties": {
                "address_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetAddressTypeByIdResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetAddressTypeByIdResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetAddressTypeQueryResponse": {
            "type": "object",
            "properties": {
                "address_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetAuthorizationURLResponse": {
            "type": "object",
            "properties": {
                "authorization_url": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetAuthorizationURLResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetAuthorizationURLResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetAvatarPresignedURLRequest": {
            "type": "object",
            "required": [
                "content_type",
                "file_name",
                "file_size"
            ],
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                }
            }
        },
        "api_gateway_dto.GetAvatarPresignedURLResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetAvatarPresignedURLResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetAvatarPresignedURLResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetCurrentUserResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "phone_verify": {
                    "type": "boolean"
                }
            }
        },
        "api_gateway_dto.GetCurrentUserResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetCurrentUserResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetListModuleResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.GetModuleResponse"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetModuleResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetModuleResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetModuleResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetNotificationSettingsResponse": {
            "type": "object",
            "properties": {
                "email_setting": {
                    "$ref": "#/definitions/api_gateway_dto.SettingsResponse"
                },
                "in_app_setting": {
                    "$ref": "#/definitions/api_gateway_dto.SettingsResponse"
                }
            }
        },
        "api_gateway_dto.GetNotificationSettingsResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetNotificationSettingsResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetPermissionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetPermissionResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.GetPermissionResponse"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetRoleResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_models.PermissionDetailType"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetRoleResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.GetRoleResponse"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.GetUserByAdminResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verify": {
                    "type": "boolean"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "phone_verify": {
                    "type": "boolean"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.RoleLoginResponse"
                    }
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.GetUserByAdminResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.GetUserByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.ListAddressTypesResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.GetAddressTypeQueryResponse"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                }
            }
        },
        "api_gateway_dto.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "avatar_url": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.RoleLoginResponse"
                    }
                }
            }
        },
        "api_gateway_dto.LoginResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.LoginResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.LogoutRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.LogoutResponse": {
            "type": "object"
        },
        "api_gateway_dto.LogoutResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.LogoutResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.Metadata": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                }
            }
        },
        "api_gateway_dto.ModulesPermissionsRequest": {
            "type": "object",
            "required": [
                "module_id",
                "permissions"
            ],
            "properties": {
                "module_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api_gateway_dto.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.RefreshTokenResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.RefreshTokenResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "full_name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                }
            }
        },
        "api_gateway_dto.RegisterResponse": {
            "type": "object"
        },
        "api_gateway_dto.RegisterResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.RegisterResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.ResendVerifyEmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.ResendVerifyEmailResponse": {
            "type": "object"
        },
        "api_gateway_dto.ResendVerifyEmailResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.ResendVerifyEmailResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "email",
                "otp",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                }
            }
        },
        "api_gateway_dto.ResetPasswordResponse": {
            "type": "object"
        },
        "api_gateway_dto.ResetPasswordResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.ResetPasswordResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.ResponseErrorDocs": {
            "type": "object",
            "properties": {
                "error": {},
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.RoleLoginResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.SettingsResponse": {
            "type": "object",
            "properties": {
                "order_status": {
                    "type": "boolean"
                },
                "payment_status": {
                    "type": "boolean"
                },
                "product_status": {
                    "type": "boolean"
                },
                "promotion": {
                    "type": "boolean"
                }
            }
        },
        "api_gateway_dto.UpdateAddressTypeBodyRequest": {
            "type": "object",
            "required": [
                "address_type"
            ],
            "properties": {
                "address_type": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.UpdateAddressTypeByAdminResponse": {
            "type": "object"
        },
        "api_gateway_dto.UpdateAddressTypeResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateAddressTypeByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.UpdateCurrentUserRequest": {
            "type": "object",
            "required": [
                "avatar_url",
                "email",
                "fullname"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.UpdateCurrentUserResponse": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "phone_verify": {
                    "type": "boolean"
                }
            }
        },
        "api_gateway_dto.UpdateCurrentUserResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateCurrentUserResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.UpdateEmailSettingRequest": {
            "type": "object",
            "required": [
                "order_status",
                "payment_status",
                "product_status",
                "promotion"
            ],
            "properties": {
                "order_status": {
                    "type": "boolean"
                },
                "payment_status": {
                    "type": "boolean"
                },
                "product_status": {
                    "type": "boolean"
                },
                "promotion": {
                    "type": "boolean"
                }
            }
        },
        "api_gateway_dto.UpdateInAppSettingRequest": {
            "type": "object",
            "required": [
                "order_status",
                "payment_status",
                "product_status",
                "promotion"
            ],
            "properties": {
                "order_status": {
                    "type": "boolean"
                },
                "payment_status": {
                    "type": "boolean"
                },
                "product_status": {
                    "type": "boolean"
                },
                "promotion": {
                    "type": "boolean"
                }
            }
        },
        "api_gateway_dto.UpdateModuleByModuleIDRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "api_gateway_dto.UpdateModuleByModuleIDResponse": {
            "type": "object"
        },
        "api_gateway_dto.UpdateModuleByModuleIDResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateModuleByModuleIDResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.UpdateNotificationSettingsRequest": {
            "type": "object",
            "required": [
                "email_setting",
                "in_app_setting"
            ],
            "properties": {
                "email_setting": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateEmailSettingRequest"
                },
                "in_app_setting": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateInAppSettingRequest"
                }
            }
        },
        "api_gateway_dto.UpdateNotificationSettingsResponse": {
            "type": "object",
            "properties": {
                "email_setting": {
                    "$ref": "#/definitions/api_gateway_dto.SettingsResponse"
                },
                "in_app_setting": {
                    "$ref": "#/definitions/api_gateway_dto.SettingsResponse"
                }
            }
        },
        "api_gateway_dto.UpdateNotificationSettingsResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateNotificationSettingsResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.UpdatePermissionByIDResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdatePermissionByPermissionIDResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.UpdatePermissionByPermissionIDRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "api_gateway_dto.UpdatePermissionByPermissionIDResponse": {
            "type": "object"
        },
        "api_gateway_dto.UpdateRoleRequest": {
            "type": "object",
            "required": [
                "modules_permissions",
                "role_name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "modules_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_gateway_dto.ModulesPermissionsRequest"
                    }
                },
                "role_name": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "api_gateway_dto.UpdateRoleResponse": {
            "type": "object"
        },
        "api_gateway_dto.UpdateRolesResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateRoleResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.UpdateUserByAdminRequest": {
            "type": "object",
            "required": [
                "roles"
            ],
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "status": {
                    "enum": [
                        "active",
                        "inactive"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/api_gateway_models.UserStatus"
                        }
                    ],
                    "example": "active"
                }
            }
        },
        "api_gateway_dto.UpdateUserByAdminResponse": {
            "type": "object"
        },
        "api_gateway_dto.UpdateUserByAdminResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.UpdateUserByAdminResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_dto.VerifyEmailRequest": {
            "type": "object",
            "required": [
                "email",
                "otp"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "api_gateway_dto.VerifyEmailResponse": {
            "type": "object"
        },
        "api_gateway_dto.VerifyEmailResponseDocs": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api_gateway_dto.VerifyEmailResponse"
                },
                "metadata": {
                    "$ref": "#/definitions/api_gateway_dto.Metadata"
                }
            }
        },
        "api_gateway_models.PermissionDetailType": {
            "type": "object",
            "properties": {
                "module_id": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api_gateway_models.UserStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusInactive"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}